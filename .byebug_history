c
q
next
step
next
c
@config[:rabbit_mq_url]
next
@config
next
@session_params
next
@config
next
config
c
config
c
q
subject.call(env)
c
q
env
header
@response
q
@response
@response.get_header(Rack::SET_COOKIE)
cookie_key
step
session_id
next
step
next
step
q
context(status, header, body, request)
c
(@push_handler ||= PushHandler.from_middleware)
c
(@push_handler ||= PushHandler.from_middleware)
q
(@push_handler ||= PushHandler.from_middleware)
step
c
(@push_handler ||= PushHandler.from_middleware)
c
(@push_handler ||= PushHandler.from_middleware)
(@push_handler ||= PushHandler.from_middleware)&.push(data)
c
subject.instance_variable_get(:@push_handler)
c
@push_handler.push(@data)
@push_handler
next
PushHandler.from_middleware.push(data)
PushHandler.from_middleware.push
PushHandler.from_middleware
data
c
q
klass.new(a: 'b')
klass.new
klass = ContextRequestMiddleware.load_class_from_name(ContextRequestMiddleware.push_handler,ContextRequestMiddleware::PushHandler.to_s,ContextRequestMiddleware.push_handler_version)
class = ContextRequestMiddleware.load_class_from_name(ContextRequestMiddleware.push_handler,ContextRequestMiddleware::PushHandler.to_s,ContextRequestMiddleware.push_handler_version)
ContextRequestMiddleware.load_class_from_name(ContextRequestMiddleware.push_handler,ContextRequestMiddleware::PushHandler.to_s,ContextRequestMiddleware.push_handler_version)
c
q
ContextRequestMiddleware.sampling_handler
::ContextRequestMiddleware.sampling_handler
::ContextRequestMiddleware.sampling_handler_version
ContextRequestMiddleware.sampling_handler_version
ContextRequestMiddleware.load_class_from_name(ContextRequestMiddleware.sampling_handler,ContextRequestMiddleware::SamplingHandler.to_s,ContextRequestMiddleware.sampling_handler_version)
step
valid_sample?(request)
c
q
@cookie.match(/#{cookie_key}=([^\;]*)/)[1]
@cookie.match(/#{cookie_key}=([^\;]*)/)&.fetch(1)
@cookie.match(/#{cookie_key}=([^\;]*)/)&[1]
@cookie.match(/#{cookie_key}=([^\;]*)/)[1]
@cookie.match(/#{cookie_key}=([^\;]*)/)[0]
@cookie.match(/#{cookie_key}=([^;]*)/)[0]
@cookie.match(/#{cookie_key}=(.*)/)[0]
@cookie.match(/#{cookie_key}=(.*)/)
@cookie.match(/#{cookie_key}=(.*)/).values_at
@cookie.match(/#{cookie_key}=(.*)/).value_at
@cookie.match(/#{cookie_key}=(.*)/).value_at(1)
@cookie.match(/#{cookie_key}=(.*)/).value_at(0)
@cookie.match(/#{cookie_key}=(.*)/).value
@cookie.match(/#{cookie_key}=(.*)/)
@cookie.match(/#{cookie_key}=/).value
@cookie.match(/#{cookie_key}=/)
@cookie.match(/#{cookie_key}=)
@cookie
cookie_key
#{cookie_key}
@cookie.match(/#{cookie_key}=\([^\;]*\)\;/)
@cookie.match(/#{cookie_key}=\([^;]*\);)
@cookie.match(/#{cookie_key}=\([^;]*\);/)
@cookie.match(/#{cookie_key}=([^;]*);/)
@cookie
next
step
q
Rack::HTTP_COOKIE
HTTP_COOKIE
@response
@request.session
@request.cookies
@request
Rack::Utils.parse_cookies_header(@request.cookies)
cookie
q
cookie
cookie[cookie_key]
cookie
cookie_key
next
@request.session_options[:key]
@request.session_options
@request.session_options && @request.session_options[:key]
@request.session_options
next
step
c
cookie_key
c
q
@request.session_options
@request.session_options[:key]
q
@response.get_header(Rack::SET_COOKIE)[self.class.cookie_session_id_key]
@response.get_header(Rack::SET_COOKIE)
@response
c
@response
c
@response
@response.get_header(Rack::SET_COOKIE)
c
next
response
next
q
@response
q
@response
session_cookie
q
c
q
@response
response
c
next
step
next
c
q
response.get_header(Rack::SET_COOKIE)
response.get_header(Rack::Response::SET_COOKIE)
Rack::Response::SET_COOKIE
response
next
options
next
step
c
next
step
subject.call
response.get_cookie
response
next
step
next
q
response.set_cookie_header
next
cookie
next
options
next
net
step
response
next
request
next
request
sid
next
q
request.session
q
c
request_context_retriever(request)
q
[root_path_name, version, name.tr('.', '_').camelize].compact.join('::').constantize
require 'context_request_middleware/request/rack_session_id_retriever'
[root_path_name, version, name.tr('.', '_').camelize].compact.join('::').constantize
[root_path_name, version, name.tr('.', '_').camelize].compact.join('::')
root_path_name
root_path_name,
next
step
ContextRequestMiddleware.load_class_from_name(ContextRequestMiddleware.request_context_retriever, ContextRequestMiddleware::Request.to_s)
ContextRequestMiddleware.request_context_retriever
step
request_context_retriever(request)
q
request_context(request)
next
step
request.cookies
c
q
request.cookies
request.cookies['session_id'] = '123'
request.cookies
request
q
valid_sample?(request)
next
q
ContextRequestMiddleware.push_handler
q
ContextRequestMiddleware.sampling_handler_version
version
next
step
next
q
sampling_handler
next
ContextRequestMiddleware.sampling_handler
ContextRequestMiddleware.sampling_handler,
ContextRequestMiddleware::SamplingHandler::AcceptAll
ContextRequestMiddleware.sampling_handler
step
sampling_handler
step
next
c
next
value
next
step
next
request.get_header(headers[0])
request
q
@request.session
@request
q
